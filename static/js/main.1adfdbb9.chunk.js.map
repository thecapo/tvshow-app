{"version":3,"sources":["components/Header.js","config.js","components/HeroImage.js","components/SearchBar.js","components/FourColGrid.js","components/TvShowThumb.js","components/LoadMoreBtn.js","components/Spinner.js","components/Home.js","components/Navigation.js","components/TvShowInfo.js","components/TvShowInfoBar.js","helpers.js","components/Actor.js","components/TvShow.js","components/NotFound.js","components/App.js","index.js"],"names":["HeaderStyle","styled","div","_templateObject","Header","react_default","a","createElement","react_router_dom","to","className","lib_default","name","size","src","alt","API_URL","API_KEY","IMAGE_BASE_URL","HeroImageStyle","HeroImage_templateObject","HeroImage","props","style","background","concat","image","title","text","SearchBarStyle","SearchBar_templateObject","SearchBar","state","value","timeout","doSearch","event","_this","setState","target","clearTimeout","setTimeout","callback","type","placeholder","onChange","this","Component","FourColGridStyle","FourColGrid_templateObject","FourColGrid","header","loading","children","map","element","i","key","TvShowThumbStyle","TvShowThumb_templateObject","TvShowThumb","clickable","pathname","tvshowId","tvshowName","LoadMoreBtnStyle","LoadMoreBtn_templateObject","LoadMoreBtn","onClick","SpinnerStyle","Spinner_templateObject","Spinner","HomeStyle","Home_templateObject","Home","tvshows","heroImage","currentPage","totalPages","searchTerm","searchItems","console","log","endpoint","fetchItems","loadMoreItems","fetch","then","result","json","Object","toConsumableArray","results","page","total_pages","localStorage","setItem","JSON","stringify","catch","error","getItem","parse","objectSpread","components_HeroImage","backdrop_path","original_title","overview","components_SearchBar","components_FourColGrid","components_TvShowThumb","poster_path","id","components_Spinner","components_LoadMoreBtn","NavigationStyle","Navigation_templateObject","Navigation","tvshow","TvShowInfoStyle","TvShowInfo_templateObject","TvShowInfo","min","max","optimum","low","high","vote_average","crews","length","TvShowInfoBarStyle","TvShowInfoBar_templateObject","TvShowInfoBar","popularity","toFixed","time","hours","Math","floor","mins","calcTime","runtime","first_air_date","ActorStyle","Actor_templateObject","Actor","actor","profile_path","character","TvShowStyle","TvShow_templateObject","TvShow","actors","networks","status_code","match","params","crew","filter","member","job","cast","components_Navigation","location","components_TvShowInfo","components_TvShowInfoBar","episode_run_time","components_Actor","NotFound","App","Fragment","components_Header","react_router","path","component","exact","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.1adfdbb9.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport FontAwesome from \"react-fontawesome\";\n\nconst HeaderStyle = styled.div`\n  width: 100%;\n  height: auto;\n  background: #1c1c1c;\n  padding: 0 20px;\n  box-sizing: border-box;\n  max-width: 1280px;\n  min-height: 120px;\n  height: auto;\n  padding: 20px 0px;\n  margin: 0 auto;\n  box-sizing: border-box;\n  overflow: hidden;\n\n  .rmdb-logo {\n    width: 300px;\n    margin-top: 20px;\n    float: left;\n    color: white;\n  }\n\n  .rmdb-tmdb-logo-text {\n    width: 122px;\n    font-size: 65px;\n  }\n\n  .rmdb-tmdb-logo {\n    width: 122px;\n    margin-top: 25px;\n    float: right;\n  }\n\n  @media screen and (max-width: 500px) {\n    max-width: 1280px;\n    min-height: 0px;\n\n    .rmdb-tmdb-logo-text {\n      display: inline-block;\n      width: 80px;\n      margin-top: 0px;\n    }\n\n    .rmdb-tmdb-logo {\n      display: inline-block;\n      width: 80px;\n      margin-top: 0px;\n    }\n\n    .rmdb-logo {\n      margin-top: 5px;\n    }\n  }\n`;\n\nconst Header = () => {\n  return (\n    <HeaderStyle>\n      <Link to=\"/\">\n        <div className=\"rmdb-logo\">\n          <FontAwesome name=\"tv\" size=\"4x\" />\n          <span className=\"rmdb-tmdb-logo-text\">TV-APP</span>\n        </div>\n        <img\n          className=\"rmdb-tmdb-logo\"\n          src=\"./images/tmdb_logo.png\"\n          alt=\"tmdb-logo\"\n        />\n      </Link>\n    </HeaderStyle>\n  );\n};\n\nexport default Header;","const API_URL = \"https://api.themoviedb.org/3/\";\nconst API_KEY = \"94f5bd2de197e8a3aea80a61206fa6d9\";\n\nconst IMAGE_BASE_URL = \"http://image.tmdb.org/t/p/\";\n\n//Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = \"w1280\";\n\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = \"w500\";\n\nexport { API_URL, API_KEY, IMAGE_BASE_URL, BACKDROP_SIZE, POSTER_SIZE };\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst HeroImageStyle = styled.div`\n  .rmdb-heroimage {\n    background-size: 100%, cover !important;\n    background-position: center, center !important;\n    width: 100%;\n    height: 600px;\n    position: relative;\n    animation: animateHeroimage 1s;\n  }\n\n  @keyframes animateHeroimage {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n\n  .rmdb-heroimage-content {\n    max-width: 1280px;\n    padding: 20px;\n    margin: 0 auto;\n  }\n\n  .rmdb-heroimage-text {\n    z-index: 100;\n    max-width: 700px;\n    position: absolute;\n    bottom: 40px;\n    margin-right: 20px;\n    min-height: 100px;\n    background: rgba(0, 0, 0, 0);\n    color: #fff;\n  }\n\n  .rmdb-heroimage-text h1 {\n    font-family: \"Abel\", sans-serif;\n    font-size: 48px;\n    color: #fff;\n  }\n\n  .rmdb-heroimage-text p {\n    font-family: \"Abel\", sans-serif;\n    font-size: 22px;\n    line-height: 26px;\n    color: #fff;\n  }\n\n  @media screen and (max-width: 720px) {\n    .rmdb-heroimage-text {\n      max-width: 100%;\n    }\n\n    .rmdb-heroimage-text h1 {\n      font-size: 38px;\n      color: #fff;\n    }\n\n    .rmdb-heroimage-text p {\n      font-size: 16px;\n      line-height: 20px;\n      color: #fff;\n    }\n  }\n`;\n\nconst HeroImage = props => {\n  return (\n    <HeroImageStyle>\n      <div\n        className=\"rmdb-heroimage\"\n        style={{\n          background: `linear-gradient(to bottom, rgba(0,0,0,0)\n      39%,rgba(0,0,0,0)\n      41%,rgba(0,0,0,0.65)\n      100%),\n      url('${props.image}'), #1c1c1c`\n        }}\n      >\n        <div className=\"rmdb-heroimage-content\">\n          <div className=\"rmdb-heroimage-text\">\n            <h1>{props.title}</h1>\n            <p>{props.text}</p>\n          </div>\n        </div>\n      </div>\n    </HeroImageStyle>\n  );\n};\n\nexport default HeroImage;\n","import React, { Component } from \"react\";\nimport FontAwesome from \"react-fontawesome\";\nimport styled from \"styled-components\";\n\nconst SearchBarStyle = styled.div`\n  .rmdb-searchbar {\n    width: 100%;\n    height: 105px;\n    background: #1c1c1c;\n    position: relative;\n    padding: 25px 20px 0px 20px;\n    box-sizing: border-box;\n    color: #fff;\n  }\n\n  .rmdb-searchbar-content {\n    max-width: 1280px;\n    width: 100%;\n    height: 55px;\n    background: #353535;\n    margin: 0 auto;\n    border-radius: 40px;\n    position: relative;\n    color: #fff;\n  }\n\n  .rmdb-fa-search {\n    position: absolute;\n    left: 20px;\n    top: 12px;\n    color: #fff;\n  }\n\n  .rmdb-searchbar-input {\n    font-family: \"Abel\", sans-serif;\n    font-size: 38px;\n    position: absolute;\n    left: 70px;\n    top: 7px;\n    border: 0;\n    background: transparent;\n    height: 40px;\n    color: #fff;\n  }\n\n  .rmdb-searchbar-input:focus {\n    outline: none;\n  }\n\n  @media screen and (max-width: 720px) {\n    .rmdb-searchbar-input {\n      font-size: 28px;\n      color: #fff;\n    }\n  }\n`;\n\nclass SearchBar extends Component {\n  state = {\n    value: \"\"\n  };\n\n  timeout = null;\n\n  doSearch = event => {\n    this.setState({ value: event.target.value });\n    clearTimeout(this.timeout);\n\n    this.timeout = setTimeout(() => {\n      this.props.callback(this.state.value);\n    }, 500);\n  };\n\n  render() {\n    return (\n      <SearchBarStyle>\n        <div className=\"rmdb-searchbar\">\n          <div className=\"rmdb-searchbar-content\">\n            <FontAwesome className=\"rmdb-fa-search\" name=\"search\" size=\"2x\" />\n            <input\n              type=\"text\"\n              className=\"rmdb-searchbar-input\"\n              placeholder=\"Search\"\n              onChange={this.doSearch}\n              value={this.state.value}\n            />\n          </div>\n        </div>\n      </SearchBarStyle>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst FourColGridStyle = styled.div`\n  .rmdb-grid h1 {\n    font-family: \"Abel\", sans-serif;\n    font-size: 42px;\n    color: white;\n  }\n\n  .rmdb-grid-content {\n    display: grid;\n    grid-template-columns: auto auto auto auto;\n  }\n\n  .rmdb-grid-element {\n    margin: 0 20px 40px 20px;\n    background: #353535;\n    max-height: 430px;\n    animation: animateGrid 0.5s;\n    overflow: hidden;\n  }\n\n  @keyframes animateGrid {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n\n  /* For a 4-column grid */\n  .rmdb-grid-element:nth-child(4n + 4) {\n    margin-right: 0;\n  }\n\n  @media screen and (max-width: 720px) {\n    .rmdb-grid-content {\n      grid-template-columns: auto auto;\n    }\n\n    .rmdb-grid-element:nth-child(2n + 2) {\n      margin-right: 0;\n    }\n\n    .rmdb-grid h1 {\n      font-size: 22px;\n    }\n  }\n`;\n\nconst FourColGrid = props => {\n  const renderElements = () => {\n    const gridElements = props.children.map((element, i) => {\n      return (\n        <FourColGridStyle key={i}>\n          <div className=\"rmdb-grid-element\">\n            {element}\n          </div>\n        </FourColGridStyle>\n      );\n    });\n    return gridElements;\n  };\n\n  return (\n    <FourColGridStyle>\n      <div className=\"rmdb-grid\">\n        {props.header && !props.loading ? <h1>{props.header}</h1> : null}\n        <div className=\"rmdb-grid-content\">{renderElements()}</div>\n      </div>\n    </FourColGridStyle>\n  );\n};\n\nFourColGrid.propTypes = {\n  header: PropTypes.string,\n  loading: PropTypes.bool.isRequired\n};\n\nexport default FourColGrid;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst TvShowThumbStyle = styled.div`\n  .rmdb-tvthumb img {\n    width: 500px;\n    /* height: 420px; */\n    height: auto;\n    max-width: 100%;\n    max-height: 100%;\n    transition: all 0.3s;\n    box-sizing: border-box;\n  }\n\n  .clickable {\n    cursor: pointer;\n  }\n\n  .clickable:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst TvShowThumb = props => {\n  return (\n    <TvShowThumbStyle>\n      <div className=\"rmdb-tvthumb\">\n        {props.clickable ? (\n          <Link\n            to={{\n              pathname: `/${props.tvshowId}`,\n              tvshowName: `${props.tvshowName}`\n            }}\n          >\n            <img src={props.image} alt=\"tvthumb\" />\n          </Link>\n        ) : (\n          <img src={props.image} alt=\"tvthumb\" />\n        )}\n      </div>\n    </TvShowThumbStyle>\n  );\n};\n\nTvShowThumb.propTypes = {\n  image: PropTypes.string,\n  tvshowId: PropTypes.number,\n  tvshowName: PropTypes.string\n};\n\nexport default TvShowThumb;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst LoadMoreBtnStyle = styled.div`\n  .rmdb-loadmorebtn {\n    background: #16d47b;\n    width: 100%;\n    min-height: 50px;\n    text-align: center;\n    color: #fff;\n    cursor: pointer;\n    transition: all 0.3s;\n  }\n\n  .rmdb-loadmorebtn p {\n    font-family: \"Abel\", sans-serif;\n    font-size: 42px;\n    padding: 20px;\n  }\n\n  .rmdb-loadmorebtn:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst LoadMoreBtn = props => {\n  return (\n    <LoadMoreBtnStyle>\n      <div className=\"rmdb-loadmorebtn\" onClick={props.onClick}>\n        <p>{props.text}</p>\n      </div>\n    </LoadMoreBtnStyle>\n  );\n};\n\nexport default LoadMoreBtn;\n","import React from \"react\";\nimport styled from 'styled-components';\n\nconst SpinnerStyle = styled.div`\n  .loader {\n    border: 5px solid #f3f3f3; /* Light grey */\n    border-top: 5px solid #16d47b; /* Blue */\n    border-radius: 50%;\n    width: 50px;\n    height: 50px;\n    animation: spin 0.8s linear infinite;\n    margin: 20px auto;\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nconst Spinner = () => {\n  return (\n    <SpinnerStyle>\n      <div className=\"loader\" />\n    </SpinnerStyle>\n  ); \n};\n\nexport default Spinner;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport {\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  POSTER_SIZE,\n  BACKDROP_SIZE\n} from \"../config\";\nimport HeroImage from \"./HeroImage\";\nimport SearchBar from \"./SearchBar\";\nimport FourColGrid from \"./FourColGrid\";\nimport TvShowThumb from \"./TvShowThumb\";\nimport LoadMoreBtn from \"./LoadMoreBtn\";\nimport Spinner from \"./Spinner\";\n\nconst HomeStyle = styled.div`\n  .rmdb-home {\n    margin-bottom: 100px;\n  }\n\n  .rmdb-home-grid {\n    max-width: 1280px;\n    margin: 0 auto;\n    padding: 0 20px;\n  }\n`;\n\nclass Home extends Component {\n  state = {\n    tvshows: [],\n    heroImage: null,\n    loading: false,\n    currentPage: 0,\n    totalPages: 0,\n    searchTerm: \"\"\n  };\n\n  componentDidMount() {\n    if (localStorage.getItem(\"HomeState\")) {\n      const state = JSON.parse(localStorage.getItem(\"HomeState\"));\n      this.setState({ ...state });\n    } else {\n             this.setState({ loading: true });\n             const endpoint = `${API_URL}tv/popular?api_key=${API_KEY}&language=en-US&page=1`;\n             https: this.fetchItems(endpoint);\n           }\n  }\n\n  searchItems = searchTerm => {\n    console.log(searchTerm);\n    let endpoint = \"\";\n    this.setState({\n      tvshows: [],\n      loading: true,\n      searchTerm\n    });\n\n    if (searchTerm === \"\") {\n      endpoint = `${API_URL}tv/popular?api_key=${API_KEY}&language=en-US&page=1`;\n    } else {\n      endpoint = `${API_URL}search/tv?api_key=${API_KEY}&language=en-US&query=${searchTerm}`;\n    }\n    this.fetchItems(endpoint);\n  };\n\n  loadMoreItems = () => {\n    let endpoint = \"\";\n    this.setState({ loading: true });\n\n    if (this.state.searchTerm === \"\") {\n      endpoint = `${API_URL}tv/popular?api_key=${API_KEY}&language=en-US&page=${this\n        .state.currentPage + 1}`;\n    } else {\n      endpoint = `${API_URL}search/tv?api_key=${API_KEY}&language=en-US&query=${\n        this.state.searchTerm\n      }&page=${this.state.currentPage + 1}`;\n    }\n    this.fetchItems(endpoint);\n  };\n\n  fetchItems = endpoint => {\n    fetch(endpoint)\n      .then(result => result.json())\n      .then(result => {\n        this.setState(\n          {\n            tvshows: [...this.state.tvshows, ...result.results],\n            heroImage: this.state.heroImage || result.results[0],\n            loading: false,\n            currentPage: result.page,\n            totalPages: result.total_pages\n          },\n          () => {\n            if (this.state.searchTerm === \"\") {\n              localStorage.setItem(\"HomeState\", JSON.stringify(this.state));\n            }\n          }\n        );\n      })\n      .catch(error => console.error(\"Error:\", error));\n  };\n\n  render() {\n    return (\n      <HomeStyle>\n        <div className=\"rmdb-home\">\n          {this.state.heroImage ? (\n            <div>\n              <HeroImage\n                image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${\n                  this.state.heroImage.backdrop_path\n                }`}\n                title={this.state.heroImage.original_title}\n                text={this.state.heroImage.overview}\n              />\n              <SearchBar callback={this.searchItems} />\n            </div>\n          ) : null}\n          <div className=\"rmdb-home-grid\">\n            <FourColGrid\n              header={\n                this.state.searchTerm ? \"Search Result\" : \"Popular Tv Shows\"\n              }\n              loading={this.state.loading}\n            >\n              {this.state.tvshows.map((element, i) => {\n                return (\n                  <TvShowThumb\n                    key={i}\n                    clickable={true}\n                    image={\n                      element.poster_path\n                        ? `${IMAGE_BASE_URL}${POSTER_SIZE}${\n                            element.poster_path\n                          }`\n                        : \"./images/no_image.jpg\"\n                    }\n                    tvshowId={element.id}\n                    tvshowName={element.name}\n                  />\n                );\n              })}\n            </FourColGrid>\n            {this.state.loading ? <Spinner /> : null}\n            {this.state.currentPage <= this.state.totalPages &&\n            !this.state.loading ? (\n              <LoadMoreBtn text=\"Load More\" onClick={this.loadMoreItems} />\n            ) : null}\n          </div>\n        </div>\n      </HomeStyle>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst NavigationStyle = styled.div`\n  .rmdb-navigation {\n    width: 100%;\n    height: 50px;\n    background: #353535;\n    color: #fff;\n    position: relative;\n    padding: 20px;\n    box-sizing: border-box;\n    margin: 0;\n    padding-top: 10px;\n  }\n\n  .rmdb-navigation-content {\n    max-width: 1280px;\n    margin: 0 auto;\n    padding: 0 20px;\n  }\n\n  .rmdb-navigation-content p {\n    font-family: \"Abel\", sans-serif;\n    font-size: 22px;\n    float: left;\n    color: #fff;\n    padding-right: 10px;\n    text-decoration: none;\n    margin: 0;\n  }\n`;\n\nconst Navigation = props => {\n  return (\n    <NavigationStyle>\n      <div className=\"rmdb-navigation\">\n        <div className=\"rmdb-navigation-content\">\n          <Link to=\"/\">\n            <p>Home</p>\n          </Link>\n          <p>/</p>\n          <p>{props.tvshow}</p>\n        </div>\n      </div>\n    </NavigationStyle>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport { IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from \"../config\";\nimport FontAwesome from \"react-fontawesome\";\nimport styled from \"styled-components\";\nimport TvShowThumb from \"./TvShowThumb\";\n\nconst TvShowInfoStyle = styled.div`\n  .rmdb-tvshowinfo {\n    background-size: cover !important;\n    background-position: center !important;\n    width: 100%;\n    height: 600px;\n    padding: 40px 20px;\n    box-sizing: border-box;\n    animation: animateTvshowinfo 1s;\n  }\n\n  @keyframes animateTvshowinfo {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n\n  .rmdb-tvshowinfo-content {\n    max-width: 1280px;\n    width: 100%;\n    height: 100%;\n    margin: 0 auto;\n    background: rgb(0, 0, 0, 0.7);\n    position: relative;\n  }\n\n  .rmdb-tvshowinfo-thumb {\n    width: 350px;\n    height: 100%;\n    overflow: hidden;\n    position: absolute;\n    left: 0px;\n  }\n\n  .rmdb-tvshowinfo-text {\n    font-family: Arial, Helvetica, sans-serif;\n    height: 100%;\n    width: auto;\n    padding: 40px;\n    color: #fff;\n    overflow: hidden;\n    box-sizing: border-box;\n    position: absolute;\n    left: 360px;\n  }\n\n  .rmdb-tvshowinfo-text h1 {\n    font-family: \"Abel\", sans-serif;\n    font-size: 48px;\n    margin: 0;\n  }\n\n  .rmdb-tvshowinfo-text h3 {\n    font-size: 16px;\n    line-height: 0;\n    margin-top: 30px;\n  }\n\n  .rmdb-tvshowinfo-text p {\n    font-family: \"Abel\", sans-serif;\n    font-size: 18px;\n    line-height: 26px;\n  }\n\n  .rmdb-rating {\n    width: 250px;\n    height: 20px;\n    margin-top: 20px;\n    position: relative;\n  }\n\n  .rmdb-score {\n    position: absolute;\n    margin: 0;\n    right: 0px;\n    top: -3px;\n  }\n\n  .rmdb-crew {\n    margin: 0;\n  }\n\n  .fa-film {\n    position: absolute;\n    bottom: 40px;\n    right: 40px;\n    color: #fff;\n  }\n\n  meter::-webkit-meter-bar {\n    background: #fff;\n    width: 200px;\n  }\n  meter::-webkit-meter-optimum-value {\n    background: linear-gradient(to bottom, #16d47b);\n  }\n  meter::-webkit-meter-suboptimum-value {\n    background: linear-gradient(to bottom, #fbb450);\n  }\n  meter::-webkit-meter-even-less-good-value {\n    background: linear-gradient(to bottom, #ee5f5b);\n  }\n`;\n\nconst TvShowInfo = props => {\n  console.log('props', props)\n  return (\n    <TvShowInfoStyle>\n      <div\n        className=\"rmdb-tvshowinfo\"\n        style={{\n          background: props.tvshow.backdrop_path\n            ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${\n                props.tvshow.backdrop_path\n              }')`\n            : \"#000\"\n        }}\n      >\n        <div className=\"rmdb-tvshowinfo-content\">\n          <div className=\"rmdb-tvshowinfo-thumb\">\n            <TvShowThumb\n              image={\n                props.tvshow.poster_path\n                  ? `${IMAGE_BASE_URL}${POSTER_SIZE}${\n                      props.tvshow.poster_path\n                    }`\n                  : \"./images/no_image.jpg\"\n              }\n              clickable={false}\n            />\n          </div>\n          <div className=\"rmdb-tvshowinfo-text\">\n            <h1>{props.tvshow.title}</h1>\n            <h3>PLOT</h3>\n            <p>{props.tvshow.overview}</p>\n            <h3>IMDB RATING</h3>\n            <div className=\"rmdb-rating\">\n              <meter\n                min=\"0\"\n                max=\"100\"\n                optimum=\"100\"\n                low=\"40\"\n                high=\"70\"\n                value={props.tvshow.vote_average * 10}\n              />\n              <p className=\"rmdb-score\">{props.tvshow.vote_average}</p>\n            </div>\n            {props.crews.length > 1 ? (\n              <h3>Executive Producers</h3>\n            ) : (\n              <h3>Executive Producer</h3>\n            )}\n            {props.crews.map((element, i) => {\n              return (\n                <p key={i} className=\"rmdb-crew\">\n                  {element.name}\n                </p>\n              );\n            })}\n          </div>\n          <FontAwesome className=\"fa-film\" name=\"film\" size=\"5x\" />\n        </div>\n      </div>\n    </TvShowInfoStyle>\n  );\n};\n\nexport default TvShowInfo;\n","import React from \"react\";\nimport FontAwesome from \"react-fontawesome\";\nimport styled from \"styled-components\";\nimport { calcTime, calcPopularity } from \"../helpers\";\n\nconst TvShowInfoBarStyle = styled.div`\n  .rmdb-tvinfobar {\n    width: 100%;\n    height: 105px;\n    background: #1c1c1c;\n    position: relative;\n    padding: 25px 20px 0px 20px;\n    box-sizing: border-box;\n    font-family: \"Abel\", sans-serif;\n    font-size: 22px;\n  }\n\n  .rmdb-tvinfobar-content {\n    max-width: 1280px;\n    width: 100%;\n    margin: 0 auto;\n    color: #fff;\n  }\n\n  .rmdb-tvinfobar-content-col {\n    float: left;\n    width: 33.33%;\n    box-sizing: border-box;\n    padding: 10px 20px 0 0;\n  }\n\n  .rmdb-tvinfobar-info {\n    padding: 5px 0 0 10px;\n    float: left;\n  }\n\n  .fa-popularity,\n  .fa-calendar {\n    float: left;\n    margin-top: -4px;\n  }\n\n  .fa-time {\n    float: left;\n    margin-top: -3px;\n  } \n`;\n\nconst TvShowInfoBar = props => {\n  return (\n    <TvShowInfoBarStyle>\n      <div className=\"rmdb-tvinfobar\">\n        <div className=\"rmdb-tvinfobar-content\">\n          <div className=\"rmdb-tvinfobar-content-col\">\n            <FontAwesome className=\"fa-popularity\" name=\"angellist\" size=\"2x\" />\n            <span className=\"rmdb-tvinfobar-info\">\n              Popularity: {calcPopularity(props.popularity)}\n            </span>\n          </div>\n          <div className=\"rmdb-tvinfobar-content-col\">\n            <FontAwesome className=\"fa-time\" name=\"clock-o\" size=\"2x\" />\n            <span className=\"rmdb-tvinfobar-info\">\n              Run Time: {calcTime(props.runtime)}\n            </span>\n          </div>\n          <div className=\"rmdb-tvinfobar-content-col\">\n            <FontAwesome className=\"fa-calendar\" name=\"calendar\" size=\"2x\" />\n            <span className=\"rmdb-tvinfobar-info\">\n              First Air Date: {props.first_air_date}\n            </span>\n          </div>\n        </div>\n      </div>\n    </TvShowInfoBarStyle>\n  );\n};\n\nexport default TvShowInfoBar;\n","export const calcPopularity = popularity => {\n  const score = (popularity * 0.1).toFixed(0) + '%';\n  return score;\n}\n\n// Convert time to hours and minutes\nexport const calcTime = time => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};","import React from \"react\";\nimport styled from \"styled-components\";\nimport { IMAGE_BASE_URL } from \"../config\";\n\nconst ActorStyle = styled.div`\n  .rmdb-actor {\n    box-sizing: border-box;\n  }\n\n  .rmdb-actor img {\n    width: 125px;\n    height: 185px;;\n    float: left;\n    box-sizing: border-box;\n  }\n\n  .rmdb-actor-name {\n    font-family: \"Abel\", sans-serif;\n    font-size: 22px;\n    color: #fff;\n    float: left;\n    margin: 10px 20px;\n    width: 40%;\n    box-sizing: border-box;\n  }\n\n  .rmdb-actor-character {\n    font-family: \"Abel\", sans-serif;\n    font-size: 18px;\n    color: #fff;\n    float: left;\n    margin: 0 20px 10px 20px;\n    width: 40%;\n    box-sizing: border-box;\n  }\n`;\n\nconst Actor = props => {\n  const POSTER_SIZE = \"w154\";\n\n  return (\n    <ActorStyle>\n      <div className=\"rmdb-actor\">\n        <img\n          src={\n            props.actor.profile_path\n              ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.actor.profile_path}`\n              : \"./images/no_image.jpg\"\n          }\n          alt=\"actorthumb\"\n        />\n        <span className=\"rmdb-actor-name\">{props.actor.name}</span>\n        <span className=\"rmdb-actor-character\">{props.actor.character}</span>\n      </div>\n    </ActorStyle>\n  );\n};\n\nexport default Actor;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { API_URL, API_KEY } from \"../config\";\nimport Navigation from \"./Navigation\";\nimport TvShowInfo from \"./TvShowInfo\";\nimport TvShowInfoBar from \"./TvShowInfoBar\";\nimport FourColGrid from \"./FourColGrid\";\nimport Actor from \"./Actor\";\nimport Spinner from \"./Spinner\";\n\nconst TvShowStyle = styled.div`\n  .rmdb-tvshow {\n    margin-bottom: 100px;\n  }\n\n  .rmdb-tvshow-grid {\n    margin: 0 auto;\n    padding: 0 20px;\n  }\n`;\n\nclass TvShow extends Component {\n  state = {\n    tvshow: null,\n    actors: null,\n    networks: [],\n    crews: [],\n    loading: false\n  };\n\n  componentDidMount() {\n    if (localStorage.getItem(`${this.props.match.params.tvshowId}`)) {\n      const state = JSON.parse(\n        localStorage.getItem(`${this.props.match.params.tvshowId}`)\n      );\n      this.setState({ ...state });\n    } else {\n      this.setState({ loading: true });\n      const endpoint = `${API_URL}tv/${\n        this.props.match.params.tvshowId\n      }?api_key=${API_KEY}&language=en-US`; \n      this.fetchItems(endpoint);\n    }\n  }\n\n  fetchItems = endpoint => {\n    fetch(endpoint)\n      .then(result => result.json())\n      .then(result => {\n        // console.log;\n        if (result.status_code) {\n          this.setState({ loading: false });\n        } else {\n          this.setState({ tvshow: result }, () => {\n            // ... then fetch actors in the setState callback function\n            const endpoint = `${API_URL}tv/${\n              this.props.match.params.tvshowId\n            }/credits?api_key=${API_KEY}`;\n            fetch(endpoint)\n              .then(result => result.json())\n              .then(result => {\n                const crews = result.crew.filter(\n                  member => member.job === \"Executive Producer\"\n                );\n\n                this.setState(\n                  {\n                    actors: result.cast,\n                    crews,\n                    loading: false\n                  },\n                  () => {\n                    localStorage.setItem(\n                      `${this.props.match.params.tvshowId}`,\n                      JSON.stringify(this.state)\n                    );\n                  }\n                );\n              });\n          });\n        }\n      })\n      .catch(error => console.error(\"Error:\", error));\n  };\n\n  render() {\n    return (\n      <TvShowStyle>\n        <div className=\"rmdb-tvshow\">\n          {this.state.tvshow ? (\n            <div>\n              <Navigation tvshow={this.props.location.tvshowName} />\n              <TvShowInfo tvshow={this.state.tvshow} crews={this.state.crews} />\n              <TvShowInfoBar\n                popularity={this.state.tvshow.popularity}\n                runtime={this.state.tvshow.episode_run_time}\n                first_air_date={this.state.tvshow.first_air_date}\n              />\n            </div>\n          ) : null}\n          {this.state.actors ? (\n            <div className=\"rmdb-tvshow-grid\">\n              <FourColGrid header={\"Actors\"}>\n                {this.state.actors.map((element, i) => {\n                  return <Actor key={i} actor={element} />;\n                })}\n              </FourColGrid>\n            </div>\n          ) : null}\n          {!this.state.actors && !this.state.loading ? (\n            <h1>No Tv Show Found!</h1>\n          ) : null}\n          {this.state.loading ? <Spinner /> : null}\n        </div>\n      </TvShowStyle>\n    );\n  }\n}\n\nexport default TvShow;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return (\n    <div>\n      <h1>Whoooops. This page doesn't exist</h1>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Header from './Header';\nimport Home from './Home';\nimport TvShow from './TvShow';\nimport NotFound from './NotFound';\n\nconst App = () => {\n  return (\n    <Router>\n      <React.Fragment>\n        <Header />\n        <Switch>\n          <Route path=\"/\" component={Home} exact />\n          <Route path=\"/:tvshowId\" component={TvShow} exact />\n          <Route component={NotFound} />\n        </Switch>\n      </React.Fragment>\n    </Router>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}